apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestrator-agent
  namespace: travel-agent-system
  labels:
    app: orchestrator-agent
    component: orchestrator
spec:
  replicas: 2
  selector:
    matchLabels:
      app: orchestrator-agent
  template:
    metadata:
      labels:
        app: orchestrator-agent
        component: orchestrator
    spec:
      containers:
      - name: orchestrator-agent
        image: travel-agent-system:orchestrator-agent
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 10001
          name: http
        env:
        - name: SERVICE_NAME
          value: "orchestrator"
        envFrom:
        - configMapRef:
            name: travel-agent-config
        - secretRef:
            name: travel-agent-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 10001
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 10001
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: orchestrator-agent-service
  namespace: travel-agent-system
  labels:
    app: orchestrator-agent
spec:
  selector:
    app: orchestrator-agent
  ports:
  - port: 10001
    targetPort: 10001
    name: http
  type: LoadBalancer  # External access for clients